{"version":3,"sources":["popup/popup.jsx"],"names":["IS_REACT_16","createPortal","Popup","state","direction","hasScrollbar","receivedContainer","styles","top","left","height","topGradientStyles","width","bottomGradientStyles","anchor","clickEventBindTimeout","domElemPopup","domElemPopupInner","domElemPopupContent","isWindowClickBinded","position","handleWindowResize","isPropsToPositionCorrect","redraw","componentWillMount","context","isInCustomContainer","renderContainerElement","positioningContainerElement","setState","componentDidMount","props","onClickOutside","ensureClickEvent","target","setGradientStyles","window","addEventListener","componentWillReceiveProps","nextProps","nextContext","visible","componentDidUpdate","prevProps","componentWillUnmount","cancel","removeEventListener","render","cn","isContainerReady","template","popup","for","type","size","padded","id","minWidth","getMinWidth","maxWidth","getMaxWidth","handleMouseEnter","handleMouseLeave","header","inner","handleInnerScroll","content","children","handleResize","bottom","getRenderContainer","event","scrollTop","offsetHeight","scrollHeight","isTopReached","Math","round","isBottomReached","onMouseEnter","onMouseLeave","handleWindowClick","setTarget","setPosition","getInnerNode","document","body","getPositioningContainer","Error","popupHash","getPopupHash","bestDrawingParams","right","overflow","clientHeight","getDrawingCss","isDestroy","isNeedBindEvent","undefined","clearTimeout","setTimeout","drawingParams","directions","bestDirection","isHeightAdaptive","isHeightAvailable","isTargetAnchor","isHaveTooltip","offsetWidth","contentWidth","contentHeight","offset","main","mainOffset","second","secondaryOffset","fitContainer","fitContaiterOffset","targetPosition","targetAnchor","clientWidth","Component","propTypes","className","string","oneOfType","arrayOf","node","oneOf","number","bool","theme","func","defaultProps","contextTypes"],"mappings":"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","file":"popup.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { autobind } from 'core-decorators';\nimport { canUseDOM } from 'exenv';\nimport debounce from 'lodash.debounce';\nimport React from 'react';\nimport Type from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport RenderInContainer from '../render-in-container/render-in-container';\nimport ResizeSensor from '../resize-sensor/resize-sensor';\n\nimport { calcBestDrawingParams, calcTargetDimensions, calcFitContainerDimensions } from './calc-drawing-params';\nimport cn from '../cn';\nimport { HtmlElement } from '../lib/prop-types';\nimport { isNodeOutsideElement } from '../lib/window';\nimport performance from '../performance';\n\nconst IS_REACT_16 = !!ReactDOM.createPortal;\n\n/**\n * @typedef {Object} Point\n * @property {Number} left Координата по оси x\n * @property {Number} top Координата по оси y\n */\n\n/**\n * @typedef {Object} PopupOffsetCollection\n * @property {Number} main Смещение в пикселях всплывающего окна относительно основного направления\n * @property {Number} second Смещение в пикселях всплывающего окна относительно второстепенного направления\n * @property {Number} viewport Минимально допустимое смещение в пикселях всплывающего окна от края окна браузера\n */\n\n/**\n * @typedef {Object} PopupHash\n * @property {Array.<String>} directions Список возмножных расположений попапа\n * @property {String} bestDirection Приоритетное расположение\n * @property {Boolean} isHeightAdaptive Подстраивается ли высота попапа под край окна\n * @property {Boolean} isHeightAvailable Занимает ли попап всю возможную высоту\n * @property {Boolean} isTargetAnchor Привязан ли попап к другому элементу\n * @property {Boolean} isHaveTooltip Имеет ли попап тип \"tooltip\"\n * @property {Number} width Ширина попапа\n * @property {Number} height Высота попапа\n * @property {Number} contentWidth Ширина контента в попапе\n * @property {Number} contentHeight Высота контента в попапе\n * @property {PopupOffsetCollection} offset Список смещений попапа\n * @property {Point} targetPosition Координаты точки привязки попапа\n * @property {HTMLElement} targetAnchor Объект элемента, к которому привязан попап, в DOM дереве\n */\n\n/**\n * Компонент popup'а.\n */\n@cn('popup')\n@performance(true)\nclass Popup extends React.Component {\n    static propTypes = {\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Дочерние элементы `Popup` */\n        children: Type.oneOfType([Type.arrayOf(Type.node), Type.node]),\n        /** Тип попапа */\n        type: Type.oneOf(['default', 'tooltip']),\n        /** Подстраивание высоты попапа под край окна ('adaptive'), занятие попапом всей возможной высоты ('available'), 'default' */\n        height: Type.oneOf(['default', 'available', 'adaptive']),\n        /** Только для target='anchor', расположение (в порядке приоритета) относительно точки открытия. Первым указывается главное направление, через дефис - второстепенное направление */\n        directions: Type.arrayOf(Type.oneOf([\n            'anchor', 'top-left', 'top-center', 'top-right', 'left-top', 'left-center', 'left-bottom', 'right-top',\n            'right-center', 'right-bottom', 'bottom-left', 'bottom-center', 'bottom-right'\n        ])),\n        /** Привязка компонента к другому элементу на странице, или его расположение независимо от остальных: 'anchor', 'position', 'screen' */\n        target: Type.oneOf(['anchor', 'position', 'screen']),\n        /** Только для target='anchor'. Смещение в пикселях всплывающего окна относительно основного направления */\n        mainOffset: Type.number,\n        /** Только для target='anchor'. Смещение в пикселях всплывающего окна относительно второстепенного направления */\n        secondaryOffset: Type.number,\n        /** Только для target='anchor'. Минимально допустимое смещение в пикселях всплывающего окна от края его контейнера */\n        fitContaiterOffset: Type.number,\n        /** Управление видимостью компонента */\n        visible: Type.bool,\n        /** Управление выставлением модификатора для добавления внутренних отступов в стилях */\n        padded: Type.bool,\n        /** Элемент закреплённого заголовка для компонента */\n        header: Type.node,\n        /** Размер компонента */\n        size: Type.oneOf(['s', 'm', 'l', 'xl']),\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Обработчик события наведения курсора на попап */\n        onMouseEnter: Type.func,\n        /** Обработчик события снятия курсора с попапа */\n        onMouseLeave: Type.func,\n        /** Обработчик клика вне компонента */\n        onClickOutside: Type.func,\n        /** Минимальная ширина попапа */\n        minWidth: Type.number,\n        /** Максимальная ширина попапа */\n        maxWidth: Type.number,\n        /** Указатель на родительский элемент */\n        for: Type.string\n    };\n\n    static defaultProps = {\n        visible: false,\n        padded: true,\n        secondaryOffset: 0,\n        fitContaiterOffset: 0,\n        target: 'anchor',\n        size: 's'\n    };\n\n    static contextTypes = {\n        isInCustomContainer: Type.bool,\n        renderContainerElement: HtmlElement,\n        positioningContainerElement: HtmlElement\n    };\n\n    state = {\n        direction: null,\n        hasScrollbar: false,\n        receivedContainer: false,\n        styles: {\n            top: 0,\n            left: 0,\n            height: 'auto'\n        },\n        topGradientStyles: {\n            width: '100%'\n        },\n        bottomGradientStyles: {\n            width: '100%'\n        }\n    };\n\n    anchor = null;\n    clickEventBindTimeout = null;\n    domElemPopup = null;\n    domElemPopupInner = null;\n    domElemPopupContent = null;\n    isWindowClickBinded = false;\n    position = null;\n\n    popup;\n    inner;\n    content;\n\n    handleWindowResize = debounce(() => {\n        if (this.isPropsToPositionCorrect()) {\n            this.redraw();\n        }\n    }, 200);\n\n    componentWillMount() {\n        if (this.context.isInCustomContainer\n            && this.context.renderContainerElement\n            && this.context.positioningContainerElement) {\n            this.setState({\n                receivedContainer: true\n            });\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.onClickOutside) {\n            this.ensureClickEvent();\n        }\n\n        if (this.props.height === 'adaptive' || this.props.target === 'screen') {\n            this.setGradientStyles();\n        }\n\n        window.addEventListener('resize', this.handleWindowResize);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (!this.state.receivedContainer\n            && nextContext.renderContainerElement\n            && nextContext.positioningContainerElement) {\n            this.setState({\n                receivedContainer: true\n            }, () => {\n                if (this.props.visible) {\n                    this.redraw();\n                }\n            });\n\n            return;\n        }\n\n        if (nextProps.visible !== this.props.visible) {\n            this.redraw();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.onClickOutside) {\n            if (prevProps.onClickOutside !== this.props.onClickOutside) {\n                this.ensureClickEvent();\n            } else if (prevProps.visible !== this.props.visible) {\n                this.ensureClickEvent(!this.props.visible);\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.props.onClickOutside) {\n            this.ensureClickEvent(true);\n        }\n\n        // Cancel debouncing to avoid `this.setState()` invocation in unmounted component state\n        this.handleWindowResize.cancel();\n        window.removeEventListener('resize', this.handleWindowResize);\n    }\n\n    render(cn) {\n        if (!canUseDOM || !this.isContainerReady()) {\n            return null;\n        }\n\n        let template = (\n            <div\n                ref={ (popup) => { this.popup = popup; } }\n                data-for={ this.props.for }\n                className={ cn({\n                    direction: this.state.direction,\n                    type: (this.props.target === 'anchor') && (this.props.type === 'tooltip') && this.props.type,\n                    target: this.props.target,\n                    size: this.props.size,\n                    visible: this.props.visible,\n                    height: this.props.height,\n                    padded: this.props.padded\n                }) }\n                id={ this.props.id }\n                style={ {\n                    ...this.state.styles,\n                    minWidth: this.getMinWidth(),\n                    maxWidth: this.getMaxWidth()\n                } }\n                onMouseEnter={ this.handleMouseEnter }\n                onMouseLeave={ this.handleMouseLeave }\n            >\n                <div className={ cn('container') }>\n                    {\n                        this.props.header && (\n                            <div className={ cn('header') }>\n                                { this.props.header }\n                            </div>\n                        )\n                    }\n                    <div\n                        ref={ (inner) => { this.inner = inner; } }\n                        className={ cn('inner') }\n                        onScroll={ this.handleInnerScroll }\n                    >\n                        <div className={ cn('content') } ref={ (content) => { this.content = content; } }>\n                            { this.props.children }\n                            <ResizeSensor onResize={ this.handleResize } />\n                        </div>\n                    </div>\n                    {\n                        this.state.hasScrollbar && (\n                            <div>\n                                <div\n                                    className={ cn('gradient', { top: true }) }\n                                    style={ this.state.topGradientStyles }\n                                />\n                                <div\n                                    className={ cn('gradient', { bottom: true }) }\n                                    style={ this.state.bottomGradientStyles }\n                                />\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n        );\n\n        return IS_REACT_16\n            ? ReactDOM.createPortal(template, this.getRenderContainer())\n            : <RenderInContainer container={ this.getRenderContainer() }>{ template }</RenderInContainer>;\n    }\n\n    @autobind\n    handleInnerScroll(event) {\n        let { scrollTop, offsetHeight, scrollHeight } = event.target;\n        let isTopReached = Math.round(scrollTop) === 0;\n        let isBottomReached = Math.round(scrollTop) + offsetHeight === scrollHeight;\n\n        if (this.props.height === 'adaptive' || this.props.target === 'screen') {\n            let topGradientStyles = {\n                width: this.state.topGradientStyles.width\n            };\n            let bottomGradientStyles = {\n                width: this.state.bottomGradientStyles.width\n            };\n\n            if (isTopReached) {\n                topGradientStyles.height = 0;\n            }\n\n            if (isBottomReached) {\n                bottomGradientStyles.height = 0;\n            }\n\n            this.setState({\n                topGradientStyles,\n                bottomGradientStyles\n            });\n        }\n    }\n\n    @autobind\n    handleMouseEnter() {\n        if (this.props.onMouseEnter) {\n            this.props.onMouseEnter();\n        }\n    }\n\n    @autobind\n    handleMouseLeave() {\n        if (this.props.onMouseLeave) {\n            this.props.onMouseLeave();\n        }\n    }\n\n    @autobind\n    handleWindowClick(event) {\n        if (this.props.onClickOutside && !!this.domElemPopup && isNodeOutsideElement(event.target, this.domElemPopup)) {\n            this.props.onClickOutside(event);\n        }\n    }\n\n    @autobind\n    handleResize() {\n        if (!this.props.visible) {\n            return;\n        }\n\n        this.redraw();\n    }\n\n    /**\n     * Задает элемент, к которому будет привязан popup.\n     *\n     * @public\n     * @param {HTMLElement} target Элемент, к которому будет привязан popup\n     */\n    setTarget(target) {\n        if (this.anchor === target) {\n            return;\n        }\n\n        this.anchor = target;\n        this.redraw();\n    }\n\n    /**\n     * Задает положение popup.\n     *\n     * @public\n     * @param {Number} left x-coordinate\n     * @param {Number} top y-coordinate\n     */\n    setPosition(left, top) {\n        this.position = { left, top };\n        this.redraw();\n    }\n\n    /**\n     * Возвращает внутренний DOM узел.\n     *\n     * @public\n     * @returns {HTMLElement}\n     */\n    getInnerNode() {\n        return this.domElemPopupInner;\n    }\n\n    /**\n     * Возвращает контейнер, в котором отрендерится попап.\n     *\n     * @returns {HTMLElement}\n     */\n    getRenderContainer() {\n        if (!this.context.isInCustomContainer) {\n            return IS_REACT_16 ? document.body : null;\n        }\n\n        return this.context.renderContainerElement;\n    }\n\n    /**\n     * Возвращает контейнер, внутрь которого надо вписать элемент.\n     *\n     * @returns {HTMLElement}\n     */\n    getPositioningContainer() {\n        if (!this.context.isInCustomContainer) {\n            return null;\n        }\n\n        return this.context.positioningContainerElement;\n    }\n\n    /**\n     * Возвращает `true`, если контейнер, в котором должен быть отрисован\n     * `Popup` уже находится в DOM. Для `Popup` без кастомного контейнера\n     * роль контейнера выполняет `document.body` и этот для них этот метод\n     * всегда вернете `true`.\n     *\n     * @returns {Boolean}\n     */\n    isContainerReady() {\n        if (!this.context.isInCustomContainer) {\n            return true;\n        }\n\n        return (\n            this.context.isInCustomContainer && this.state.receivedContainer\n        );\n    }\n\n    /**\n     * Возвращает `true`, если все необходимые для расчета положения `Popup`\n     * внешние props заданы.\n     *\n     * @returns {Boolean}\n     */\n    isPropsToPositionCorrect() {\n        return (this.props.target === 'anchor' && this.anchor)\n            || (this.props.target === 'position' && this.position)\n            || (this.props.target === 'screen');\n    }\n\n    @autobind\n    redraw() {\n        if (!canUseDOM || !this.isContainerReady()) {\n            return;\n        }\n\n        if (!this.isPropsToPositionCorrect()) {\n            throw new Error('Cannot show popup without target or position');\n        }\n\n        if (!this.domElemPopup) {\n            this.domElemPopup = this.popup;\n            this.domElemPopupInner = this.inner;\n            this.domElemPopupContent = this.content;\n        }\n\n        let popupHash = this.getPopupHash();\n        let bestDrawingParams;\n\n        switch (this.props.target) {\n            case 'position':\n                bestDrawingParams = { top: this.position.top, left: this.position.left };\n                break;\n\n            case 'screen':\n                bestDrawingParams = {\n                    top: 0,\n                    left: 0,\n                    right: 0,\n                    bottom: 0,\n                    overflow: this.inner.scrollHeight > this.inner.clientHeight\n                };\n                break;\n\n            case 'anchor':\n                bestDrawingParams = calcBestDrawingParams(\n                    popupHash,\n                    calcTargetDimensions(popupHash),\n                    calcFitContainerDimensions(popupHash)\n                );\n                break;\n        }\n\n        this.setState({\n            direction: bestDrawingParams.direction,\n            hasScrollbar: bestDrawingParams.overflow,\n            styles: this.getDrawingCss(bestDrawingParams)\n        });\n\n        this.setGradientStyles();\n    }\n\n    ensureClickEvent(isDestroy) {\n        let isNeedBindEvent = isDestroy !== undefined ? !isDestroy : this.props.visible;\n\n        // We need timeouts to not to catch the event that causes\n        // popup opening (because it propagates to the `window`).\n        if (this.clickEventBindTimeout) {\n            clearTimeout(this.clickEventBindTimeout);\n            this.clickEventBindTimeout = null;\n        }\n\n        this.clickEventBindTimeout = setTimeout(() => {\n            if (!this.isWindowClickBinded && isNeedBindEvent) {\n                window.addEventListener('click', this.handleWindowClick);\n                window.addEventListener('touchend', this.handleWindowClick);\n                this.isWindowClickBinded = true;\n            } else if (this.isWindowClickBinded && !isNeedBindEvent) {\n                window.removeEventListener('click', this.handleWindowClick);\n                window.removeEventListener('touchend', this.handleWindowClick);\n                this.isWindowClickBinded = false;\n            }\n        }, 0);\n    }\n\n    getDrawingCss(drawingParams) {\n        return {\n            top: drawingParams.top,\n            left: drawingParams.left,\n            right: drawingParams.right,\n            bottom: drawingParams.bottom,\n            height: this.props.height === 'adaptive' ? drawingParams.height : 'auto'\n        };\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getMinWidth() {\n        return this.props.minWidth !== undefined ? this.props.minWidth : 0;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getMaxWidth() {\n        return this.props.maxWidth !== undefined ? this.props.maxWidth : 'none';\n    }\n\n    /**\n     * Get collection of popup properties.\n     *\n     * @returns {PopupHash}\n     */\n    getPopupHash() {\n        return {\n            directions: this.props.directions,\n            bestDirection: this.state.direction,\n            isHeightAdaptive: this.props.height === 'adaptive',\n            isHeightAvailable: this.props.height === 'available',\n            isTargetAnchor: this.props.target === 'anchor',\n            isHaveTooltip: this.props.type === 'tooltip',\n            width: this.domElemPopup.offsetWidth,\n            height: this.domElemPopup.offsetHeight,\n            contentWidth: this.domElemPopupContent.offsetWidth,\n            contentHeight: this.domElemPopupContent.offsetHeight,\n            offset: {\n                main: this.props.mainOffset,\n                second: this.props.secondaryOffset,\n                fitContainer: this.props.fitContaiterOffset\n            },\n            targetPosition: this.position,\n            targetAnchor: this.anchor,\n            fitContainer: this.getPositioningContainer()\n        };\n    }\n\n    setGradientStyles() {\n        let { clientWidth } = this.inner;\n\n        this.setState({\n            topGradientStyles: {\n                width: clientWidth,\n                height: 0\n            },\n            bottomGradientStyles: {\n                width: clientWidth\n            }\n        });\n    }\n}\n\nexport default Popup;\n"]}