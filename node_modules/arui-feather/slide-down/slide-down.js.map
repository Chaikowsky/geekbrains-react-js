{"version":3,"sources":["slide-down/slide-down.jsx"],"names":["SlideDown","state","height","isHeightAuto","componentDidMount","props","isExpanded","setAutoHeight","componentWillReceiveProps","nextProps","setHeightToContentHeight","setHeightToNull","onAnimationStart","render","cn","id","getHeight","handleTransitionEnd","slideDown","expanded","slideDownContent","children","event","propertyName","onAnimationEnd","setState","offsetHeight","forceUpdate","getBoundingClientRect","Component","propTypes","bool","node","theme","oneOf","className","string","func"],"mappings":";;;;kEAAA;;;;AAIA;;;;AACA;;;;AAEA;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;IAMMA,S,WAFL,kBAAG,YAAH,C,UACA,4B;;;;;;;;;;;;4JAmBGC,K,GAAQ;AACJC,oBAAQ,CADJ;AAEJC,0BAAc;AAFV,S;;;wBAQRC,iB,gCAAoB;AAChB,YAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACvB,iBAAKC,aAAL;AACH;AACJ,K;;wBAEDC,yB,sCAA0BC,S,EAAW;AACjC,YAAI,KAAKJ,KAAL,CAAWC,UAAX,KAA0BG,UAAUH,UAAxC,EAAoD;AAChD,gBAAIG,UAAUH,UAAd,EAA0B;AACtB,qBAAKI,wBAAL;AACH,aAFD,MAEO;AACH,qBAAKC,eAAL;AACH;AACD,gBAAI,KAAKN,KAAL,CAAWO,gBAAf,EAAiC;AAC7B,qBAAKP,KAAL,CAAWO,gBAAX;AACH;AACJ;AACJ,K;;wBAEDC,M,mBAAOC,E,EAAI;AAAA;;AACP,eACI;AAAA;AAAA;AACI,2BAAYA,IADhB;AAEI,oBAAK,KAAKT,KAAL,CAAWU,EAFpB;AAGI,uBACI,EAAEb,QAAQ,KAAKc,SAAL,EAAV,EAJR;AAMI,iCAAkB,KAAKC,mBAN3B;AAOI,qBAAM,aAACC,SAAD,EAAe;AAAE,2BAAKA,SAAL,GAAiBA,SAAjB;AAA6B;AAPxD;AASI;AAAA;AAAA;AACI,+BAAYJ,GAAG,SAAH,EAAc,EAAEK,UAAU,KAAKlB,KAAL,CAAWE,YAAvB,EAAd,CADhB;AAEI,yBAAM,aAACiB,gBAAD,EAAsB;AAAE,+BAAKA,gBAAL,GAAwBA,gBAAxB;AAA2C;AAF7E;AAIM,qBAAKf,KAAL,CAAWgB;AAJjB;AATJ,SADJ;AAkBH,K;;wBAGDJ,mB,gCAAoBK,K,EAAO;AACvB,YAAIA,MAAMC,YAAN,KAAuB,QAAvB,IAAmC,KAAKlB,KAAL,CAAWC,UAAlD,EAA8D;AAC1D,iBAAKC,aAAL;AACH;AACD,YAAI,KAAKF,KAAL,CAAWmB,cAAf,EAA+B;AAC3B,iBAAKnB,KAAL,CAAWmB,cAAX;AACH;AACJ,K;;wBAEDR,S,wBAAY;AACR,eAAO,KAAKf,KAAL,CAAWE,YAAX,GACD,MADC,GAED,KAAKF,KAAL,CAAWC,MAFjB;AAGH,K;;wBAEDQ,wB,uCAA2B;AACvB,aAAKe,QAAL,CAAc;AACVtB,0BAAc,KADJ;AAEVD,oBAAQ,KAAKkB,gBAAL,CAAsBM;AAFpB,SAAd;AAIH,K;;wBAEDf,e,8BAAkB;AAAA;;AACd,aAAKD,wBAAL;;AAEA;AACA,aAAKiB,WAAL,CAAiB,YAAM;AACnB;AACA,mBAAKT,SAAL,CAAeU,qBAAf;AACA,mBAAKH,QAAL,CAAc;AACVvB,wBAAQ;AADE,aAAd;AAGH,SAND;AAOH,K;;wBAEDK,a,4BAAgB;AACZ,aAAKkB,QAAL,CAAc;AACVtB,0BAAc;AADJ,SAAd;AAGH,K;;;EA1GmB,gBAAM0B,S,WACnBC,S,GAAY;AACf;AACAxB,gBAAY,oBAAKyB,IAFF;AAGf;AACAV,cAAU,oBAAKW,IAJA;AAKf;AACAC,WAAO,oBAAKC,KAAL,CAAW,CAAC,eAAD,EAAkB,eAAlB,CAAX,CANQ;AAOf;AACAC,eAAW,oBAAKC,MARD;AASf;AACArB,QAAI,oBAAKqB,MAVM;AAWf;AACAxB,sBAAkB,oBAAKyB,IAZR;AAaf;AACAb,oBAAgB,oBAAKa;AAdN,C;kBA4GRrC,S","file":"slide-down.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport Type from 'prop-types';\n\nimport { autobind } from 'core-decorators';\n\nimport cn from '../cn';\nimport performance from '../performance';\n\n/**\n * Компонент \"расхлопа\".\n * Позволяет скрывать и отображать контент.\n */\n@cn('slide-down')\n@performance()\nclass SlideDown extends React.Component {\n    static propTypes = {\n        /** Управление состоянием expand/collapse компонента */\n        isExpanded: Type.bool,\n        /** Контент компонента */\n        children: Type.node,\n        /** Тема компонента */\n        theme: Type.oneOf(['alfa-on-color', 'alfa-on-white']),\n        /** Дополнительный класс */\n        className: Type.string,\n        /** Идентификатор компонента в DOM */\n        id: Type.string,\n        /** Обработчик события начала анимации */\n        onAnimationStart: Type.func,\n        /** Обработчик события начала анимации */\n        onAnimationEnd: Type.func\n    };\n\n    state = {\n        height: 0,\n        isHeightAuto: false\n    };\n\n    slideDown;\n    slideDownContent;\n\n    componentDidMount() {\n        if (this.props.isExpanded) {\n            this.setAutoHeight();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.isExpanded !== nextProps.isExpanded) {\n            if (nextProps.isExpanded) {\n                this.setHeightToContentHeight();\n            } else {\n                this.setHeightToNull();\n            }\n            if (this.props.onAnimationStart) {\n                this.props.onAnimationStart();\n            }\n        }\n    }\n\n    render(cn) {\n        return (\n            <div\n                className={ cn() }\n                id={ this.props.id }\n                style={\n                    { height: this.getHeight() }\n                }\n                onTransitionEnd={ this.handleTransitionEnd }\n                ref={ (slideDown) => { this.slideDown = slideDown; } }\n            >\n                <div\n                    className={ cn('content', { expanded: this.state.isHeightAuto }) }\n                    ref={ (slideDownContent) => { this.slideDownContent = slideDownContent; } }\n                >\n                    { this.props.children }\n                </div>\n            </div>\n        );\n    }\n\n    @autobind\n    handleTransitionEnd(event) {\n        if (event.propertyName === 'height' && this.props.isExpanded) {\n            this.setAutoHeight();\n        }\n        if (this.props.onAnimationEnd) {\n            this.props.onAnimationEnd();\n        }\n    }\n\n    getHeight() {\n        return this.state.isHeightAuto\n            ? 'auto'\n            : this.state.height;\n    }\n\n    setHeightToContentHeight() {\n        this.setState({\n            isHeightAuto: false,\n            height: this.slideDownContent.offsetHeight\n        });\n    }\n\n    setHeightToNull() {\n        this.setHeightToContentHeight();\n\n        // Заставляем React перерисовать элемент\n        this.forceUpdate(() => {\n            // Заставляем браузер сделать reflow\n            this.slideDown.getBoundingClientRect();\n            this.setState({\n                height: 0\n            });\n        });\n    }\n\n    setAutoHeight() {\n        this.setState({\n            isHeightAuto: true\n        });\n    }\n}\n\nexport default SlideDown;\n"]}